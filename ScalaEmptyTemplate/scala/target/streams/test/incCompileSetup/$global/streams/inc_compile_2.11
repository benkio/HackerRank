format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> /home/benkio/projects/hackerrank-templates/scala/target/scala-2.11/test-classes
compile options:
0 items
javac options:
0 items
compiler version:
1 items
0 -> 2.11.7
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
5 items
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> /home/benkio/projects/hackerrank-templates/scala/target/scala-2.11/test-classes/SolutionSpec$$anonfun$1.class
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> /home/benkio/projects/hackerrank-templates/scala/target/scala-2.11/test-classes/SolutionSpec$$anonfun$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$mcV$sp$2.class
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> /home/benkio/projects/hackerrank-templates/scala/target/scala-2.11/test-classes/SolutionSpec$$anonfun$2$$anonfun$apply$mcV$sp$1.class
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> /home/benkio/projects/hackerrank-templates/scala/target/scala-2.11/test-classes/SolutionSpec$$anonfun$2.class
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> /home/benkio/projects/hackerrank-templates/scala/target/scala-2.11/test-classes/SolutionSpec.class
binary dependencies:
3 items
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> /home/benkio/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> /home/benkio/.ivy2/cache/org.scalatest/scalatest_2.11/bundles/scalatest_2.11-2.2.4.jar
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> /usr/lib/jvm/java-8-oracle/jre/lib/rt.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
0 items
member reference external dependencies:
1 items
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> Solution$
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
5 items
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> SolutionSpec
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> SolutionSpec$$anonfun$1
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> SolutionSpec$$anonfun$2
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> SolutionSpec$$anonfun$2$$anonfun$apply$mcV$sp$1
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> SolutionSpec$$anonfun$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$mcV$sp$2
used names:
65 items
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> <byname>
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> <init>
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> ?0
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> Any
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> Array
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> BeforeAndAfter
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> BufferedSource
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> ByteArrayOutputStream
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> Class
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> ClassTag
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> Codec
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> Console
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> FlatSpec
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> Function3
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> InAndIgnoreMethods
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> InputStream
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> Matchers
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> Nothing
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> OutputStream
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> Predef
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> PrintStream
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> ResultOfStringPassedToVerb
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> Solution
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> SolutionSpec
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> Source
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> String
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> StringShouldWrapper
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> System
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> T
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> Unit
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> _$7
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> after
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> apply
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> baos
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> convertToInAndIgnoreMethods
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> convertToStringShouldWrapper
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> defaultIn
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> defaultOut
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> empty
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> expectedOutput
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> fallbackSystemCodec
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> fromInputStream
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> getClass
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> getResourceAsStream
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> in
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> io
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> java
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> lang
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> main
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> materializeClassTag
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> mkString
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> org
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> out
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> output
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> package
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> scala
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> scalatest
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> setIn
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> setOut
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> shorthandTestRegistrationFunction
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> should
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> shouldBe
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> toString
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> withIn
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> withOut
product stamps:
5 items
/home/benkio/projects/hackerrank-templates/scala/target/scala-2.11/test-classes/SolutionSpec$$anonfun$1.class -> lastModified(1498039519000)
/home/benkio/projects/hackerrank-templates/scala/target/scala-2.11/test-classes/SolutionSpec$$anonfun$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$mcV$sp$2.class -> lastModified(1498039519000)
/home/benkio/projects/hackerrank-templates/scala/target/scala-2.11/test-classes/SolutionSpec$$anonfun$2$$anonfun$apply$mcV$sp$1.class -> lastModified(1498039519000)
/home/benkio/projects/hackerrank-templates/scala/target/scala-2.11/test-classes/SolutionSpec$$anonfun$2.class -> lastModified(1498039519000)
/home/benkio/projects/hackerrank-templates/scala/target/scala-2.11/test-classes/SolutionSpec.class -> lastModified(1498039519000)
source stamps:
1 items
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> hash(4940f7028ac8b10887db9578a8bf86cf4852efac)
binary stamps:
3 items
/home/benkio/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar -> lastModified(1435004218000)
/home/benkio/.ivy2/cache/org.scalatest/scalatest_2.11/bundles/scalatest_2.11-2.2.4.jar -> lastModified(1422515758000)
/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar -> lastModified(1494843025000)
class names:
3 items
/home/benkio/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar -> scala.reflect.ClassTag
/home/benkio/.ivy2/cache/org.scalatest/scalatest_2.11/bundles/scalatest_2.11-2.2.4.jar -> org.scalatest.FlatSpec
/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar -> java.io.InputStream
internal apis:
1 items
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> 

external apis:
1 items
Solution$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhw2KU6QAAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAbc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwR+3m2XQABm5vdGlmeXNxAH4ADEBjkYZ0AAhTb2x1dGlvbnNxAH4ADFXcBiB0AAR3YWl0c3EAfgAMl0ciEXQADSRhc0luc3RhbmNlT2ZzcQB+AAz7bsuZdAAGZXF1YWxzc3EAfgAMxrGt53QADGFzSW5zdGFuY2VPZnNxAH4ADCMg1fx0AA5leGVjdXRpb25TdGFydHNxAH4ADK0aEB10AAxzeW5jaHJvbml6ZWRzcQB+AAx8YQaNdAANJGlzSW5zdGFuY2VPZnNxAH4ADPK1qdZ0AARtYWluc3EAfgAMrFV6mnQACm9kZE51bWJlcnNzcQB+AAyO1hjPdAAJbm90aWZ5QWxsc3EAfgAMYZTplnQADGlzSW5zdGFuY2VPZnNxAH4ADMJ5hml0AApmaW5kTnVtYmVyc3EAfgAMNxJZDXQAAj09c3EAfgAMVaBiw3QABWNsb25lc3EAfgAM7VkzpXQABiRpbml0JHNxAH4ADLZZZjR0AAh0b1N0cmluZ3NxAH4ADDPkMih0AARhcmdzc3EAfgAMgG7ReHQAAiE9c3EAfgAMkPbJcXQACGdldENsYXNzc3EAfgAMVKhbBnQAAm5lc3EAfgAMEtRH43QAAmVxc3EAfgAMsDpE/3QAC2RlbGF5ZWRJbml0c3EAfgAMbWrGOXQAAiMjc3EAfgAMncXLwHQACGZpbmFsaXplc3EAfgAM4EVqhHQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4ATXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHEAfgARdXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAXQAEHNjYWxhLmRlcHJlY2F0ZWRzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AZXNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBNTAAJaW5oZXJpdGVkcQB+AE1MAAdwYXJlbnRzcQB+AE14cQB+AGpzcQB+AGV1cQB+AEgAAAABc3IADXhzYnRpLmFwaS5EZWZSvp/ifLQ2aQIAAkwACnJldHVyblR5cGV0ABBMeHNidGkvYXBpL1R5cGU7WwAPdmFsdWVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvUGFyYW1ldGVyTGlzdDt4cQB+AE5xAH4AV3VxAH4AWAAAAABzcQB+AFoCcQB+ACF1cQB+AFwAAAAAc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AaXQABFVuaXRzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AGlzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAAJzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABXNjYWxhc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AIV1cgAaW0x4c2J0aS5hcGkuUGFyYW1ldGVyTGlzdDv10zod8rNw7gIAAHhwAAAAAXNyABd4c2J0aS5hcGkuUGFyYW1ldGVyTGlzdNbFvBxkSXTjAgACWgAKaXNJbXBsaWNpdFsACnBhcmFtZXRlcnN0ABxbTHhzYnRpL2FwaS9NZXRob2RQYXJhbWV0ZXI7eHAAdXIAHFtMeHNidGkuYXBpLk1ldGhvZFBhcmFtZXRlcjvPuMVdpd21bQIAAHhwAAAAAXNyABl4c2J0aS5hcGkuTWV0aG9kUGFyYW1ldGVyH0WuF9NJsOoCAARaAApoYXNEZWZhdWx0TAAIbW9kaWZpZXJ0AB1MeHNidGkvYXBpL1BhcmFtZXRlck1vZGlmaWVyO0wABG5hbWVxAH4ADUwAA3RwZXEAfgByeHAAfnIAG3hzYnRpLmFwaS5QYXJhbWV0ZXJNb2RpZmllcgAAAAAAAAAAEgAAeHEAfgBfdAAFUGxhaW5xAH4AM3NyABd4c2J0aS5hcGkuUGFyYW1ldGVyaXplZBZs7mkDybt/AgACTAAIYmFzZVR5cGVxAH4AeVsADXR5cGVBcmd1bWVudHN0ABFbTHhzYnRpL2FwaS9UeXBlO3hxAH4AaXNxAH4AeHQABUFycmF5cQB+AH51cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAAXNxAH4AeHQABlN0cmluZ3NxAH4AfHNxAH4Af3VxAH4AggAAAANzcQB+AIR0AARqYXZhc3EAfgCEdAAEbGFuZ3EAfgCJc3EAfgBldXEAfgBIAAAAAHNxAH4AZXVxAH4AnAAAAARzcQB+AHh0AANBcHBxAH4AfnNxAH4AeHQAC0RlbGF5ZWRJbml0cQB+AH5zcQB+AHh0AAZPYmplY3RxAH4AoHNxAH4AeHQAA0FueXEAfgB+dXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAABzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAVzKGcRHdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQASi9ob21lL2Jlbmtpby9wcm9qZWN0cy9oYWNrZXJyYW5rLXRlbXBsYXRlcy9zY2FsYS90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUxGhOhCgzOxTXciFFeZ9NFimEuwk=
source infos:
1 items
/home/benkio/projects/hackerrank-templates/scala/src/test/scala/SolutionSpec.scala -> 
AAAAAAAAAAA=
compilations:
1 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABXMoc8t11cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATy9ob21lL2Jlbmtpby9wcm9qZWN0cy9oYWNrZXJyYW5rLXRlbXBsYXRlcy9zY2FsYS90YXJnZXQvc2NhbGEtMi4xMS90ZXN0LWNsYXNzZXN0AAEv
